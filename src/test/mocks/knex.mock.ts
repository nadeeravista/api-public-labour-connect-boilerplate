export const createKnexMock = () => {
  const mockKnex = {
    select: jest.fn().mockReturnThis(),
    from: jest.fn().mockReturnThis(),
    where: jest.fn().mockReturnThis(),
    whereIn: jest.fn().mockReturnThis(),
    whereNotIn: jest.fn().mockReturnThis(),
    whereBetween: jest.fn().mockReturnThis(),
    whereNotBetween: jest.fn().mockReturnThis(),
    whereNull: jest.fn().mockReturnThis(),
    whereNotNull: jest.fn().mockReturnThis(),
    whereExists: jest.fn().mockReturnThis(),
    whereNotExists: jest.fn().mockReturnThis(),
    whereRaw: jest.fn().mockReturnThis(),
    orWhere: jest.fn().mockReturnThis(),
    orWhereIn: jest.fn().mockReturnThis(),
    orWhereNotIn: jest.fn().mockReturnThis(),
    orWhereNull: jest.fn().mockReturnThis(),
    orWhereNotNull: jest.fn().mockReturnThis(),
    orWhereExists: jest.fn().mockReturnThis(),
    orWhereNotExists: jest.fn().mockReturnThis(),
    orWhereBetween: jest.fn().mockReturnThis(),
    orWhereNotBetween: jest.fn().mockReturnThis(),
    orWhereRaw: jest.fn().mockReturnThis(),
    groupBy: jest.fn().mockReturnThis(),
    orderBy: jest.fn().mockReturnThis(),
    limit: jest.fn().mockReturnThis(),
    offset: jest.fn().mockReturnThis(),
    count: jest.fn().mockReturnThis(),
    countDistinct: jest.fn().mockReturnThis(),
    min: jest.fn().mockReturnThis(),
    max: jest.fn().mockReturnThis(),
    sum: jest.fn().mockReturnThis(),
    sumDistinct: jest.fn().mockReturnThis(),
    avg: jest.fn().mockReturnThis(),
    avgDistinct: jest.fn().mockReturnThis(),
    insert: jest.fn().mockReturnThis(),
    update: jest.fn().mockReturnThis(),
    del: jest.fn().mockReturnThis(),
    delete: jest.fn().mockReturnThis(),
    truncate: jest.fn().mockReturnThis(),
    returning: jest.fn().mockReturnThis(),
    first: jest.fn().mockResolvedValue(null),
    then: jest.fn().mockResolvedValue([]),
    catch: jest.fn().mockResolvedValue([]),
    leftJoin: jest.fn().mockReturnThis(),
    rightJoin: jest.fn().mockReturnThis(),
    innerJoin: jest.fn().mockReturnThis(),
    fullOuterJoin: jest.fn().mockReturnThis(),
    crossJoin: jest.fn().mockReturnThis(),
    joinRaw: jest.fn().mockReturnThis(),
    having: jest.fn().mockReturnThis(),
    havingIn: jest.fn().mockReturnThis(),
    havingNotIn: jest.fn().mockReturnThis(),
    havingNull: jest.fn().mockReturnThis(),
    havingNotNull: jest.fn().mockReturnThis(),
    havingExists: jest.fn().mockReturnThis(),
    havingNotExists: jest.fn().mockReturnThis(),
    havingBetween: jest.fn().mockReturnThis(),
    havingNotBetween: jest.fn().mockReturnThis(),
    havingRaw: jest.fn().mockReturnThis(),
    union: jest.fn().mockReturnThis(),
    unionAll: jest.fn().mockReturnThis(),
    intersect: jest.fn().mockReturnThis(),
    except: jest.fn().mockReturnThis(),
    clone: jest.fn().mockReturnThis(),
    modify: jest.fn().mockReturnThis(),
    columnInfo: jest.fn().mockResolvedValue({}),
    forUpdate: jest.fn().mockReturnThis(),
    forShare: jest.fn().mockReturnThis(),
    noWait: jest.fn().mockReturnThis(),
    skipLocked: jest.fn().mockReturnThis(),
    timeout: jest.fn().mockReturnThis(),
    connection: jest.fn().mockReturnThis(),
    transaction: jest.fn().mockImplementation((callback) => callback(mockKnex)),
    raw: jest.fn().mockReturnThis(),
    destroy: jest.fn().mockResolvedValue(undefined),
  };

  return mockKnex;
};

export const createKnexQueryBuilderMock = () => {
  const mockQueryBuilder = {
    select: jest.fn().mockReturnThis(),
    from: jest.fn().mockReturnThis(),
    where: jest.fn().mockReturnThis(),
    whereIn: jest.fn().mockReturnThis(),
    whereNotIn: jest.fn().mockReturnThis(),
    whereBetween: jest.fn().mockReturnThis(),
    whereNotBetween: jest.fn().mockReturnThis(),
    whereNull: jest.fn().mockReturnThis(),
    whereNotNull: jest.fn().mockReturnThis(),
    whereExists: jest.fn().mockReturnThis(),
    whereNotExists: jest.fn().mockReturnThis(),
    whereRaw: jest.fn().mockReturnThis(),
    orWhere: jest.fn().mockReturnThis(),
    orWhereIn: jest.fn().mockReturnThis(),
    orWhereNotIn: jest.fn().mockReturnThis(),
    orWhereNull: jest.fn().mockReturnThis(),
    orWhereNotNull: jest.fn().mockReturnThis(),
    orWhereExists: jest.fn().mockReturnThis(),
    orWhereNotExists: jest.fn().mockReturnThis(),
    orWhereBetween: jest.fn().mockReturnThis(),
    orWhereNotBetween: jest.fn().mockReturnThis(),
    orWhereRaw: jest.fn().mockReturnThis(),
    groupBy: jest.fn().mockReturnThis(),
    orderBy: jest.fn().mockReturnThis(),
    limit: jest.fn().mockReturnThis(),
    offset: jest.fn().mockReturnThis(),
    count: jest.fn().mockReturnThis(),
    countDistinct: jest.fn().mockReturnThis(),
    min: jest.fn().mockReturnThis(),
    max: jest.fn().mockReturnThis(),
    sum: jest.fn().mockReturnThis(),
    sumDistinct: jest.fn().mockReturnThis(),
    avg: jest.fn().mockReturnThis(),
    avgDistinct: jest.fn().mockReturnThis(),
    insert: jest.fn().mockReturnThis(),
    update: jest.fn().mockReturnThis(),
    del: jest.fn().mockReturnThis(),
    delete: jest.fn().mockReturnThis(),
    truncate: jest.fn().mockReturnThis(),
    returning: jest.fn().mockReturnThis(),
    first: jest.fn().mockResolvedValue(null),
    then: jest.fn().mockResolvedValue([]),
    catch: jest.fn().mockResolvedValue([]),
    leftJoin: jest.fn().mockReturnThis(),
    rightJoin: jest.fn().mockReturnThis(),
    innerJoin: jest.fn().mockReturnThis(),
    fullOuterJoin: jest.fn().mockReturnThis(),
    crossJoin: jest.fn().mockReturnThis(),
    joinRaw: jest.fn().mockReturnThis(),
    having: jest.fn().mockReturnThis(),
    havingIn: jest.fn().mockReturnThis(),
    havingNotIn: jest.fn().mockReturnThis(),
    havingNull: jest.fn().mockReturnThis(),
    havingNotNull: jest.fn().mockReturnThis(),
    havingExists: jest.fn().mockReturnThis(),
    havingNotExists: jest.fn().mockReturnThis(),
    havingBetween: jest.fn().mockReturnThis(),
    havingNotBetween: jest.fn().mockReturnThis(),
    havingRaw: jest.fn().mockReturnThis(),
    union: jest.fn().mockReturnThis(),
    unionAll: jest.fn().mockReturnThis(),
    intersect: jest.fn().mockReturnThis(),
    except: jest.fn().mockReturnThis(),
    clone: jest.fn().mockReturnThis(),
    modify: jest.fn().mockReturnThis(),
    columnInfo: jest.fn().mockResolvedValue({}),
    forUpdate: jest.fn().mockReturnThis(),
    forShare: jest.fn().mockReturnThis(),
    noWait: jest.fn().mockReturnThis(),
    skipLocked: jest.fn().mockReturnThis(),
    timeout: jest.fn().mockReturnThis(),
    connection: jest.fn().mockReturnThis(),
    transaction: jest
      .fn()
      .mockImplementation((callback) => callback(mockQueryBuilder)),
    raw: jest.fn().mockReturnThis(),
  };

  return mockQueryBuilder;
};
